How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It gives the difference  between current and prior versions so that we can have better features from all the versions and make a best version out of them.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    When one has easy access to entire history of file then he/she can easily track the changes made in the file and changes that are produced in the output as a result.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    It really helps as the user actually has the control overwhat to save and when to save although it takes a little manual effort as it gives up automation.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

  	When one saves multiple files in ne commit it not only saves the individual changes but it also saves the connection between them. It helps to store the relation bretween two files and thier correspondence. This hepls to mantain the changes that are interrelated such as the changes related to same class in differet parts of code located in two different files.

How can you use the commands git log and git diff to view the history of files?

    git log displays all the history of changes and git diff gives the diference between any two commits.

How might using version control make you more confident to make changes that
could break something?

    One can freely make changes as one knows that the changes can be reverted back to normal if they are disatrous.

Now that you have your workspace set up, what do you want to try using Git for?

    I got that it is usefu, but i didn't specifically get how to use it.